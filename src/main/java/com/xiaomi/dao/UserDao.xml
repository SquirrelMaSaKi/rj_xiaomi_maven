<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaomi.dao.UserDao">
    <select id="findAll" resultType="User">
        select * from tb_user;
    </select>
    <select id="findById" resultType="User">
        select * from tb_user where id=#{id}
    </select>
    <select id="findByUserNameAndPassword" resultType="User">
        select * from tb_user where username=#{username} and password=#{password}
    </select>
    <select id="findByUserName" resultType="User">
        select * from tb_user where username=#{username}
    </select>
    <insert id="add">
        insert into tb_user(id,username,password,email,gender,flag,role,code)value(#{id},#{username},#{password},#{email},#{gender},#{flag},#{role},#{code})
    </insert>
    <update id="update">
        update tb_user set username = #{username},password = #{password},email = #{email},gender = #{gender},flag = #{flag} where id = #{id}
    </update>
    <delete id="delete">
        delete from tb_user where id=#{id}
    </delete>
    <update id="updatePassword">
        update tb_user set password = #{newpassword} where id = #{uid}
    </update>
    <select id="getCount" resultType="long">
        select count(*) from tb_user
        <where>
          ${condition}
        </where>
    </select>
    <select id="findByPages" resultType="User">
        select * from tb_user
        <where>
            ${condition}
        </where>
        order by id limit #{offset},#{pageSize}
    </select>
    <select id="findByPage" resultType="com.xiaomi.domain.User">
        select * from tb_user
        <where>
            ${condition}
        </where>
    </select>
    <update id="updateFlag">
        update tb_user set flag = #{flag} where id = #{uid}
    </update>
</mapper>